http://arma.sourceforge.net/docs.html#submat

https://cran.r-project.org/web/packages/RcppArmadillo/vignettes/RcppArmadillo-intro.pdf

https://teuder.github.io/rcpp4everyone_en/080_vector.html

http://lists.r-forge.r-project.org/pipermail/rcpp-devel/2017-January/009517.html
" When you create the one_comp_oral_ode function with cppFunction and hand that off to deSolve, you are still passing along an R function to get called.  Even if the calculations are accomplished with Rcpp, it still an R function.  So every step the solver takes, it will have to call an R function.  I don't think this is what you want. When you write the ode function as suggested by the deSolve package vignette, you pass off the name of a C function and the solver calls that C function directly as the system advances.  It will be faster than what you are doing with cppFunction."

https://stackoverflow.com/questions/36438723/r-wont-reference-cant-find-a-compiled-loaded-c-code

https://stackoverflow.com/questions/41722745/how-to-get-list-of-functions-inside-a-dll-loaded-into-r-using-dyn-load

https://github.com/cran/deSolve/blob/master/src/call_lsoda.c

https://andrewhooker.github.io/PopED/articles/model_def_other_pkgs.html

https://stackoverflow.com/questions/36453908/solving-compiled-ode-in-desolve-package-in-r

https://rdrr.io/cran/odin/src/R/generate_c_compiled.R

https://cran.r-project.org/web/packages/Rcpp/vignettes/Rcpp-extending.pdf

https://dirk.eddelbuettel.com/code/rcpp/Rcpp-quickref.pdf

https://stackoverflow.com/questions/45768042/what-is-the-main-reason-not-to-compile-c-code-with-g

Book
